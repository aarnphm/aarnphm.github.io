@use "./base.scss";
@use "./variables.scss" as *;

@font-face {
  font-family: "Berkeley Mono";
  font-style: monospace;
  font-weight: normal;
  src:
    url("/static/BerkeleyMono-Regular.woff2") format("woff2"),
    url("/static/BerkeleyMono-Regular.woff") format("woff");
}

[role="article"]:hover {
  border: 1px solid var(--highlight);
  background: var(--highlight);
  border-radius: 5px;
}

#preview-container {
  flex-grow: 1;
}

body {
  font-size: 1.2rem;
}

body {
  @mixin singleColumn {
    .page-header {
      margin: $topSpacing auto 0 auto;
      width: $pageWidth + $sidePanelWidth;
      @media all and (max-width: $fullPageWidth) {
        width: initial;
        margin-top: 2rem;
      }
    }

    .center {
      margin-left: auto;
      margin-right: calc(calc(100vw - $pageWidth) / 2 - $sidePanelWidth);
      width: $pageWidth + $sidePanelWidth;

      @media all and (max-width: $fullPageWidth) {
        margin-right: 0;
        width: initial;
        margin-left: 0;
      }
    }
  }

  &[data-slug^="tags"],
  &[data-slug*="index"] {
    @media all and (min-width: $fullPageWidth) {
      @include singleColumn;
    }
  }

  &:not([data-slug="uses"]):not([data-slug="curius"]):not([data-slug="dump/quotes"]):not(
      [data-slug="influence"]
    ):not([data-slug^="tags"]):not([data-slug*="index"]) {
    .page {
      & > #quartz-body {
        @include singleColumn;
        @media all and (min-width: $fullPageWidth) {
          .sidebar.right {
            width: 0;
          }
        }
      }
    }
  }

  // Quote display
  &[data-slug="dump/quotes"] {
    & blockquote {
      border-left: none;
      padding-left: 0;
      margin: 0;
    }

    & h3,
    & h4 {
      font-size: 1.4rem;
      font-weight: 400;
      font-style: normal;
      line-height: normal;
    }

    & h1 {
      font-size: 2rem;
      font-family: var(--bodyFont) !important;
      font-weight: 500;
      font-style: normal;
      line-height: normal;
    }

    & article {
      & > hr::after {
        content: "";
      }

      & > p {
        padding-top: 1rem;
        padding-left: 3rem;
        margin: inherit;

        &:before,
        &:after {
          font-size: 2em;
          line-height: 0.1em;
          vertical-align: -0.4em;
        }

        &:before {
          content: "“";
          margin-right: 0.25em;
        }

        &:after {
          content: "”";
          margin-left: 0.25em;
        }
      }
    }
  }
}

hr {
  overflow: visible;
  padding: 0;
  margin: 4em auto;
  border: none;
  color: var(--gray);
  text-align: center;
  width: 70%;
  border-color: var(--gray);
  &:after {
    content: "* * *";
    display: inline-block;
    margin: -1em 0 0.5em;
    font-size: 1.5em;
    padding: 0.5em 1em;
    background: var(--light);
  }
}

audio::-webkit-media-controls-panel {
  background-color: var(--lightgray);
}

.page {
  display: flex;
  min-height: 100vh;
  flex-direction: column;

  & > #quartz-body {
    @media all and (min-width: $fullPageWidth) {
      #progress {
        position: fixed;
        width: 3px;
        height: 0;
        background-color: var(--dark);
        z-index: 1000;
        transition: background-color 0.3s ease;
      }
    }
  }
}

ul.overflow,
ol.overflow {
  &:after {
    background: inherit;
  }
}

.left {
  display: grid !important;
  gap: 1.5rem !important;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(4, min-content);

  .mobile-only.explorer & {
    grid-area: 1 / 1 / 2 / 2;
  }

  .search {
    grid-area: 1 / 1 / 2 / 2;
  }

  .darkmode {
    grid-area: 1 / 2 / 2 / 3;
    height: initial;
  }

  .graph {
    grid-area: 2 / 1 / 2 / 3;
  }

  .toc {
    grid-area: 3 / 1 / 3 / 3;
  }

  .backlinks {
    grid-area: 4 / 1 / 4 / 3;
  }

  .recent-notes:nth-last-child(1) {
    grid-area: 5 / 1 / 5 / 3;
  }

  .recent-notes:nth-last-child(2) {
    grid-area: 3 / 1 / 4 / 3;
  }

  @media all and (max-width: $fullPageWidth) {
    display: flex !important;
  }
}

.right {
  display: grid !important;
  gap: 1.5rem !important;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(4, min-content);

  .search {
    grid-area: 1 / 1 / 2 / 2;
  }

  .darkmode {
    grid-area: 1 / 2 / 2 / 3;
    height: initial;
  }

  .graph {
    grid-area: 2 / 1 / 2 / 3;
  }

  .toc {
    grid-area: 3 / 1 / 3 / 3;
  }

  .backlinks {
    grid-area: 4 / 1 / 4 / 3;
  }

  @media all and (max-width: $fullPageWidth) {
    display: flex !important;
  }
}
